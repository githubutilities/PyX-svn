Applying transformations when drawing a path: Creating an ellipse

PyX does not directly provide a path corresponding to an ellipse. This example
shows how to draw an ellipse using affine transformations. ...

In order to create an ellipse, we best start from a unit circle centered around
the point of origin of the coordinate system. When stroking this circle on the
canvas, we tell PyX to apply a couple of affine transformations first. These
affine transformations are contained in the `trafo` module. We first use
`trafo.scale` to apply a non-uniform scaling, namely by a factor of 2 in
x-direction and a factor of 1.5 in y-direction. Doing so, we define the two
principle axes of the ellipse. In a next step, we rotate with `trafo.rotate`
the ellipse by an angle of 45 degrees in the mathematical positive direction,
i.e. counter-clockwise. Last, we shift the origin of the ellipse to the desired
point by applying a `trafo.translate` operation.

! Note that the order of the transformations matters. If you, for instance, would
first translate the ellipse, the later scaling would also affect the distance
by which you have shifted the ellipse. PyX applies the transformations one after
the other, from left to right, so the example shown above does the correct thing.

! You can also treat transformations as mathematical objects (they
are represented by two-dimensional matrices together with an offset vector) and 
multiply them using the `*` operator. Note, however, that mathematically, transformations
are applied from right to left, such that the above example would need to be written as

    c.stroke(path.circle(0, 0, 1), [trafo.translate(1,0) * trafo.rotate(45) * trafo.scale(sx=2, sy=1.5)])

! PyX also provides some convenience methods for applying certain
transformations with a given point as the origin. These allow one to write the
example in yet another form

    c.stroke(path.circle(1, 0, 1), [trafo.scale(sx=2, sy=1.5, x=1, y=0), trafo.rotate(45, x=1, y=0)])

where we have started already from a circle centered around the desired point 1,0.
